@* Toast Notification Component *@

@if (IsVisible)
{
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999;">
        <div class="toast show @ToastClass fade-in" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">
                    @if (Type == ToastType.Success)
                    {
                        <span class="bi bi-check-circle-fill text-success me-2"></span>
                        <text>Success</text>
                    }
                    else if (Type == ToastType.Error)
                    {
                        <span class="bi bi-exclamation-circle-fill text-danger me-2"></span>
                        <text>Error</text>
                    }
                    else if (Type == ToastType.Warning)
                    {
                        <span class="bi bi-exclamation-triangle-fill text-warning me-2"></span>
                        <text>Warning</text>
                    }
                    else
                    {
                        <span class="bi bi-info-circle-fill text-info me-2"></span>
                        <text>Info</text>
                    }
                </strong>
                <button type="button" class="btn-close" @onclick="Dismiss" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @Message
            </div>
        </div>
    </div>
}

<style>
    .toast {
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        border: none;
    }

    .toast-header {
        border-bottom: 2px solid rgba(0, 0, 0, 0.05);
        font-family: 'Cinzel', serif;
        font-weight: 600;
    }

    .bi-check-circle-fill,
    .bi-exclamation-circle-fill,
    .bi-exclamation-triangle-fill,
    .bi-info-circle-fill {
        display: inline-block;
        width: 1.25rem;
        height: 1.25rem;
        background-size: cover;
        vertical-align: middle;
    }

    .bi-check-circle-fill {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%2327ae60' viewBox='0 0 16 16'%3E%3Cpath d='M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z'/%3E%3C/svg%3E");
    }

    .bi-exclamation-circle-fill {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23c0392b' viewBox='0 0 16 16'%3E%3Cpath d='M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z'/%3E%3C/svg%3E");
    }

    .bi-exclamation-triangle-fill {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23f39c12' viewBox='0 0 16 16'%3E%3Cpath d='M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z'/%3E%3C/svg%3E");
    }

    .bi-info-circle-fill {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%233498db' viewBox='0 0 16 16'%3E%3Cpath d='M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z'/%3E%3C/svg%3E");
    }
</style>

@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public string Message { get; set; } = "";

    [Parameter]
    public ToastType Type { get; set; } = ToastType.Info;

    [Parameter]
    public EventCallback OnDismiss { get; set; }

    private string ToastClass => Type switch
    {
        ToastType.Success => "border-success",
        ToastType.Error => "border-danger",
        ToastType.Warning => "border-warning",
        ToastType.Info => "border-info",
        _ => ""
    };

    private async Task Dismiss()
    {
        IsVisible = false;
        await OnDismiss.InvokeAsync();
    }

    public enum ToastType
    {
        Success,
        Error,
        Warning,
        Info
    }
}
